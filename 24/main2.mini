let Input := file(Args[1], "r")

let Stones := []
loop
	let Line := while Input:read{}:trim
	while Line != ""
	Stones:put(list(Line / r"[,@ ]", real))
end

let (X1, Y1, Z1, U1, V1, W1) := Stones[1]
let (X2, Y2, Z2, U2, V2, W2) := Stones[2]

let M := array(list(2 .. 5; I) do
	let (Xi, Yi, Zi, Ui, Vi, Wi) := Stones[I]
	[V1 - Vi, Ui - U1, Yi - Y1, X1 - Xi]
end)

let R := array(list(2 .. 5; I) do
	let (Xi, Yi, Zi, Ui, Vi, Wi) := Stones[I]
	(U1 * Y1) - (X1 * V1) - (Ui * Yi) + (Xi * Vi)
end)

print('M = {M}\n')
print('R = {R}\n')

let (Xs, Ys, Us, Vs) := -M \ R
print('Xs = {Xs}, Ys = {Ys}, Us = {Us}, Vs = {Vs}\n')

let T1 := (X1 - Xs) / (Us - U1)
let T2 := (X2 - Xs) / (Us - U2)

print('T1 = {T1}, T2 = {T2}\n')

let Ws := (Z1 - Z2 + (W1 * T1) - (W2 * T2)) / (T1 - T2)
let Zs := Z1 - (T1 * (Ws - W1))
print('Zs = {Zs}, {Z2 - (T2 * (Ws - W2))}\n')

print('Xs = {Xs}, Ys = {Ys}, Zs = {Zs}, Us = {Us}, Vs = {Vs}, Ws = {Ws}\n')

print(Xs + Ys + Zs)
